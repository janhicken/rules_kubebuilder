"Setup kuttl repositories and rules"

KUTTL_PLATFORMS = {
    "darwin_arm64": struct(
        compatible_with = [
            "@platforms//os:macos",
            "@platforms//cpu:aarch64",
        ],
    ),
    "darwin_x86_64": struct(
        compatible_with = [
            "@platforms//os:macos",
            "@platforms//cpu:x86_64",
        ],
    ),
    "linux_arm64": struct(
        compatible_with = [
            "@platforms//os:linux",
            "@platforms//cpu:aarch64",
        ],
    ),
    "linux_armv6": struct(
        compatible_with = [
            "@platforms//os:linux",
            "@platforms//cpu:armv6-m",
        ],
    ),
    "linux_i386": struct(
        compatible_with = [
            "@platforms//os:linux",
            "@platforms//cpu:i386",
        ],
    ),
    "linux_ppc64le": struct(
        compatible_with = [
            "@platforms//os:linux",
            "@platforms//cpu:ppc",
        ],
    ),
    "linux_s390x": struct(
        compatible_with = [
            "@platforms//os:linux",
            "@platforms//cpu:s390x",
        ],
    ),
    "linux_x86_64": struct(
        compatible_with = [
            "@platforms//os:linux",
            "@platforms//cpu:x86_64",
        ],
    ),
}

DEFAULT_KUTTL_VERSION = "0.22.0"

KUTTL_VERSIONS = {
    "0.22.0": {
        "darwin_arm64": "3b3cde7c395d065711d0181891ff8e80de1a292953ce01bc455ddc373248cfd8",
        "darwin_x86_64": "edbcd53741c36e6f616b0a3377e658f1cd4a447e1513697992e37cc8606be86a",
        "linux_arm64": "9b4a0b5221c42076b97e08d8d5ef4d19cd7b998d383455e69641ba2fff710bb8",
        "linux_armv6": "edccd4452a1b4d0f1f9ab6514252c4aeabe8094dc8ccf6bfb0bc4da078e0b062",
        "linux_i386": "03b9d9779ba93647109dc88cb9d809ea3d1dee651fab934502259e67f7679f8a",
        "linux_ppc64le": "75bd718bf1eb9a4496f0a2f3290e51846aa48d27965736ddf026256c17209d23",
        "linux_s390x": "d684dce17c3f0241d2acbcdb111b050cc5999ceba3f89b7ecdd3d9385c1af110",
        "linux_x86_64": "874bcea7b8820592018c660ce71f7f6dbfbdde35ee1f73cad7f560d1380e3868",
    },
}

def _kuttl_toolchains_repo_impl(rctx):
    build = ""

    for [platform, meta] in KUTTL_PLATFORMS.items():
        build += """
toolchain(
    name = "{platform}_toolchain",
    exec_compatible_with = {compatible_with},
    toolchain = "@{user_repository_name}_{platform}//:kuttl_toolchain",
    toolchain_type = "@io_github_janhicken_rules_kubebuilder//kubebuilder:kuttl_toolchain",
)
""".format(
            platform = platform,
            user_repository_name = rctx.attr.user_repository_name,
            compatible_with = meta.compatible_with,
        )

    # Base BUILD file for this repository
    rctx.file("BUILD", build)

kuttl_toolchains_repo = repository_rule(
    _kuttl_toolchains_repo_impl,
    doc = "Creates a repository with toolchain definitions for all known platforms which can be registered or selected.",
    attrs = {
        "user_repository_name": attr.string(doc = "Base name for toolchains repository"),
    },
)

def _kuttl_platform_repo_impl(rctx):
    # https://github.com/kudobuilder/kuttl/releases/download/v0.22.0/kubectl-kuttl_0.22.0_darwin_arm64
    url = "https://github.com/kudobuilder/kuttl/releases/download/v{0}/kubectl-kuttl_{0}_{1}".format(
        rctx.attr.version,
        rctx.attr.platform,
    )

    rctx.download(
        url = url,
        output = "kubectl-kuttl",
        executable = True,
        sha256 = KUTTL_VERSIONS[rctx.attr.version][rctx.attr.platform],
    )
    build = """# @generated by @io_github_janhicken_rules_kubebuilder//kubebuilder/private:kuttl_toolchain.bzl
load("@io_github_janhicken_rules_kubebuilder//kubebuilder:toolchain.bzl", "kuttl_toolchain")
exports_files(["kubectl-kuttl"])
kuttl_toolchain(
    name = "kuttl_toolchain",
    bin = "kubectl-kuttl",
    visibility = ["//visibility:public"],
)
"""

    # Base BUILD file for this repository
    rctx.file("BUILD", build)

kuttl_platform_repo = repository_rule(
    implementation = _kuttl_platform_repo_impl,
    doc = "Fetch external tools needed for the kuttl toolchain",
    attrs = {
        "platform": attr.string(mandatory = True, values = KUTTL_PLATFORMS.keys()),
        "version": attr.string(mandatory = True, values = KUTTL_VERSIONS.keys()),
    },
)
